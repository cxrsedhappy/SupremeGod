font_text = [
    '░░      ░░░       ░░░░      ░░░       ░░░        ░░        ░░░      ░░░  ░░░░  ░░        ░░        ░░  ░░░░  ░░  ░░░░░░░░  ░░░░  ░░   ░░░  ░░░      ░░░       ░░░░      ░░░       ░░░░      ░░░        ░░  ░░░░  ░░  ░░░░  ░░  ░░░░  ░░  ░░░░  ░░  ░░░░  ░░        ░░░░░░░',
    '▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒▒▒▒▒▒▒▒  ▒▒  ▒▒▒  ▒▒▒  ▒▒▒▒▒▒▒▒   ▒▒   ▒▒    ▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒▒▒▒▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒  ▒  ▒▒▒  ▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒▒',
    '▓  ▓▓▓▓  ▓▓       ▓▓▓  ▓▓▓▓▓▓▓▓  ▓▓▓▓  ▓▓      ▓▓▓▓      ▓▓▓▓  ▓▓▓   ▓▓        ▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓▓  ▓▓     ▓▓▓▓▓  ▓▓▓▓▓▓▓▓        ▓▓  ▓  ▓  ▓▓  ▓▓▓▓  ▓▓       ▓▓▓  ▓▓ ▓  ▓▓       ▓▓▓▓      ▓▓▓▓▓▓  ▓▓▓▓▓  ▓▓▓▓  ▓▓▓  ▓▓  ▓▓▓        ▓▓▓▓    ▓▓▓▓▓▓    ▓▓▓▓▓▓▓  ▓▓▓▓▓▓▓▓▓▓',
    '█        ██  ████  ██  ████  ██  ████  ██  ████████  ████████  ████  ██  ████  █████  █████  ████  ██  ███  ███  ████████  █  █  ██  ██    ██  ████  ██  ████████  ███   ██  ███  █████████  █████  █████  ████  ████    ████   ██   ███  ██  ██████  ██████  ████████████',
    '█  ████  ██       ████      ███       ███        ██  █████████      ███  ████  ██        ███      ███  ████  ██        ██  ████  ██  ███   ███      ███  █████████      █ █  ████  ███      ██████  ██████      ██████  █████  ████  ██  ████  █████  █████        ███████',
]

class ShadedBlockyFont:
    def __init__(self):
        self.out: str = ''

    def render(self, input_txt: str) -> str:
        """Not efficient. Uses O(n*2)."""
        input_txt = input_txt.lower()
        for i in range(len(font_text)):
            for j in range(len(input_txt)):

                if input_txt[j] == ' ':
                    offset = (ord('z') - ord('a')) * 10 + 10
                    self.out += font_text[i][offset:offset + 6]
                    continue

                offset = (ord(input_txt[j]) - ord('a')) * 10
                self.out += font_text[i][offset:offset + 10]
            self.out += '\n'
        return self.out


